package com.kh.practice.set.view;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Scanner;
import java.util.TreeSet;
import java.util.InputMismatchException;

import com.kh.practice.set.controller.LotteryController;
import com.kh.practice.set.model.vo.Lottery;

public class LotteryMenu {
    Scanner sc = new Scanner(System.in);
    LotteryController lc = new LotteryController();

    public void mainMenu() {
        while (true) {
            System.out.println("========== KH 추첨 프로그램 ==========");
            System.out.println("******* 메인 메뉴 *******");
            System.out.println("1. 추첨 대상 추가");
            System.out.println("2. 추첨 대상 삭제");
            System.out.println("3. 당첨 대상 확인");
            System.out.println("4. 정렬된 당첨 대상 확인 ");
            System.out.println("5. 당첨 대상 검색");
            System.out.println("9. 종료");
            System.out.print("메뉴 번호 선택: ");
            
            int menu = getInputInt();
            
            switch (menu) {
                case 1:
                    insertObject();
                    break;
                case 2:
                    deleteObject();
                    break;
                case 3:
                    winObject();
                    break;
                case 4:
                    sortedWinObject();
                    break;
                case 5:
                    searchWinner();
                    break;
                case 9:
                    System.out.println("프로그램 종료");
                    return;
                default:
                    System.out.println("잘못 입력하였습니다. 다시 입력해주세요");
                    break;
            }
        }
    }

    public void insertObject() {
        System.out.print("추가할 추첨 대상 수: ");
        int num = getInputInt();
        sc.nextLine();  // 입력 버퍼 비우기
        
        for (int i = 0; i < num; i++) { // 수정: 반복문 조건을 i <= num에서 i < num으로 변경
            System.out.print("이름: ");
            String name = sc.nextLine();
            System.out.print("핸드폰 번호('-' 빼고): ");
            String phone = sc.nextLine();

            Lottery l = new Lottery(name, phone);
            boolean result = lc.insertObject(l);
            if (!result) {
                System.out.println("중복된 대상입니다. 다시 입력하세요.");
                i--;
            }
        }
        System.out.println("추가 완료되었습니다."); // 수정: 메소드 끝에 } 추가
    }

    public void deleteObject() {
        System.out.print("삭제할 대상의 이름: ");
        String name = sc.nextLine();
        System.out.print("핸드폰 번호('-'빼고): ");
        String phone = sc.nextLine();

        Lottery l = new Lottery(name, phone);
        boolean result = lc.deleteObject(l);
        if (result) {
            System.out.println("삭제 완료되었습니다.");
        } else {
            System.out.println("존재하지 않는 대상입니다.");
        }
    }

    public void winObject() {
        HashSet<Lottery> lset = lc.winObject();
        if (lset != null) {
            System.out.println(lset);
        } else {
            System.out.println("추첨 대상자가 4명 이상이어야 합니다.");
        }
    }

    public void sortedWinObject() {
        TreeSet<Lottery> lset = lc.sortedWinObject();
        Iterator<Lottery> it = lset.iterator();
        while (it.hasNext()) {
            System.out.println(it.next());
        }
    }

    public void searchWinner() {
        System.out.print("검색할 대상의 이름: ");
        String name = sc.nextLine();
        System.out.print("핸드폰 번호('-'빼고): ");
        String phone = sc.nextLine();
        
        Lottery l = new Lottery(name, phone);
        boolean result = lc.searchWinner(l);
        if (result) {
            System.out.println("축하합니다. 당첨 목록에 존재합니다.");
        } else {
            System.out.println("안타깝지만 당첨 목록에 존재하지 않습니다.");
        }
    }

    private int getInputInt() {
        while (true) {
            try {
                int num = sc.nextInt();
                sc.nextLine();  // 입력 버퍼 비우기
                return num;
            } catch (InputMismatchException e) {
                System.out.println("숫자를 입력해주세요.");
                sc.next(); // 잘못된 입력을 버립니다.
            }
        }
    }
}
