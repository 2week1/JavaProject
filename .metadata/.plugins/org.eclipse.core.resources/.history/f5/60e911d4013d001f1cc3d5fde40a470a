package com.kh.practice.set.controller;

import java.util.HashSet;
import java.util.TreeSet;

import com.kh.practice.set.model.vo.Lottery;

public class LotteryController {
    private HashSet<Lottery> lottery = new HashSet<>();
    private HashSet<Lottery> win = new HashSet<>();
    
    
    public boolean insertObject(Lottery l) {
        return lottery.add(l);
    }
    
    
    public boolean deleteObject(Lottery l) {
        if (lottery.remove(l)) {
            win.remove(l);
            return true;
        }
        return false;
    }
    
    
    
    public HashSet<Lottery> winObject() {
        ArrayList<Lottery> list = new ArrayList<>(lottery);
        Collections.shuffle(list);
        win.clear();
        for (int i = 0; i < 4 && i < list.size(); i++) {
            win.add(list.get(i));
        }
        return win;
    }
	
	private TreeSet sortedWinObject() {
		return null;}
	
	private boolean searchWinner(Lottery I) {
		return false;}
	@Override
	public int hashCode() {
		return super.hashCode();
	}
	@Override
	public boolean equals(Object obj) {
		return super.equals(obj);
	}
	@Override
	public String toString() {
		return super.toString();
	}

}
